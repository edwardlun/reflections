What happens when you initialize a repository? Why do you need to do it?

A hidden folder .git is created in the directory where the 'git init' command is run.
this hidden folder contains all the files necessary for the tracking of the subsequent file changes.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It allow a 'buffer' like place to store files to be committed at the same time, before any changes is committed to the working directory.

How can you use the staging area to make sure you have one commit per logical
change?

Ensure that all file at the staging area are of the samle logical function before comitting.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When i want to experiment with new functionalitiest that may or may not be integrated to the current working version of my code. 

How do the diagrams help you visualize the branch structure?

We can see more easily which the parent-child relationship of the commits/branches. We can also identify detached HEAD easily.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The newly added and original code pieces are merge together to form a new code file. 


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
